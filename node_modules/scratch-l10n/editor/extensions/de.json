{
    "ev3.beepNote": "piepse Note [NOTE] für [TIME] Sek.",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "Helligkeit",
    "ev3.getDistance": "Abstand",
    "ev3.getMotorPosition": "Position von Motor [PORT]",
    "ev3.motorSetPower": "setze Leistung von Motor [PORT] auf [POWER]%",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "wenn Helligkeit < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "wenn Abstand < [DISTANCE]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "microbit.buttonsMenu.any": "beliebiger",
    "microbit.clearDisplay": "zeige nichts an",
    "microbit.defaultTextToDisplay": "Hallo!",
    "microbit.displaySymbol": "zeige [MATRIX] an",
    "microbit.displayText": "zeige Text [TEXT] an",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "bewegt",
    "microbit.gesturesMenu.shaken": "geschüttelt",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "[DIRECTION] geneigt?",
    "microbit.pinStateMenu.off": "aus",
    "microbit.pinStateMenu.on": "an",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "beliebige",
    "microbit.tiltDirectionMenu.back": "hinten",
    "microbit.tiltDirectionMenu.front": "vorne",
    "microbit.tiltDirectionMenu.left": "links",
    "microbit.tiltDirectionMenu.right": "rechts",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "wenn [GESTURE]",
    "microbit.whenPinConnected": "wenn Pin [PIN] angeschlossen",
    "microbit.whenTilted": "wenn [DIRECTION] geneigt",
    "music.categoryName": "Musik",
    "music.changeTempo": "ändere Tempo um [TEMPO]",
    "music.drumBass": "(2) Basstrommel",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Klangstäbe",
    "music.drumClosedHiHat": "(6) Geschlossene Hi-Hat",
    "music.drumConga": "(14) Konga",
    "music.drumCowbell": "(11) Kuhglocke",
    "music.drumCrashCymbal": "(4) Crash-Becken",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Güiro",
    "music.drumHandClap": "(8) Klatschen",
    "music.drumOpenHiHat": "(5) Offene Hi-Hat",
    "music.drumSideStick": "(3) Side-Stick",
    "music.drumSnare": "(1) Snare-Drum",
    "music.drumTambourine": "(7) Tamburin",
    "music.drumTriangle": "(12) Triangel",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Holzblock",
    "music.getTempo": "Tempo",
    "music.instrumentBass": "(6) Bass-Gitarre",
    "music.instrumentBassoon": "(14) Fagott",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Chor",
    "music.instrumentClarinet": "(10) Klarinette",
    "music.instrumentElectricGuitar": "(5) E-Gitarre",
    "music.instrumentElectricPiano": "(2) E-Piano",
    "music.instrumentFlute": "(12) Querflöte",
    "music.instrumentGuitar": "(4) Gitarre",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Musikbox",
    "music.instrumentOrgan": "(3) Orgel",
    "music.instrumentPiano": "(1) Klavier",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophon",
    "music.instrumentSteelDrum": "(18) Steel-Drum",
    "music.instrumentSynthLead": "(20) Lead-Synthesizer",
    "music.instrumentSynthPad": "(21) Pad-Synthesizer",
    "music.instrumentTrombone": "(9) Posaune",
    "music.instrumentVibraphone": "(16) Vibraphon",
    "music.instrumentWoodenFlute": "(13) Blockflöte",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "setze Instrument auf [INSTRUMENT]",
    "music.playDrumForBeats": "spiele Schlaginstrument [DRUM] für [BEATS] Schläge",
    "music.playNoteForBeats": "spiele Ton [NOTE] für [BEATS] Schläge",
    "music.restForBeats": "pausiere [BEATS] Schläge",
    "music.setInstrument": "setze Instrument auf [INSTRUMENT]",
    "music.setTempo": "setze Tempo auf [TEMPO]",
    "pen.categoryName": "Malstift",
    "pen.changeColorParam": "ändere Stift [COLOR_PARAM] um [VALUE]",
    "pen.changeHue": "ändere Stiftfarbe um [HUE]",
    "pen.changeShade": "ändere Farbstärke um [SHADE]",
    "pen.changeSize": "ändere Stiftdicke um [SIZE]",
    "pen.clear": "Alles löschen",
    "pen.colorMenu.brightness": "Helligkeit",
    "pen.colorMenu.color": "Farbe",
    "pen.colorMenu.saturation": "Sättigung",
    "pen.colorMenu.transparency": "Transparenz",
    "pen.penDown": "schalte Stift ein",
    "pen.penUp": "schalte Stift aus",
    "pen.setColor": "setze Stiftfarbe auf [COLOR]",
    "pen.setColorParam": "setze Stift [COLOR_PARAM] auf [VALUE]",
    "pen.setHue": "setze Stiftfarbe auf [HUE]",
    "pen.setShade": "setze Farbstärke auf [SHADE]",
    "pen.setSize": "setze Stiftdicke auf [SIZE]",
    "pen.stamp": "Abdruck",
    "speech.defaultWhenIHearValue": "los geht's",
    "speech.extensionName": "Sprache zu Text",
    "speech.listenAndWait": "hör zu und warte",
    "speech.speechReporter": "Sprach",
    "speech.whenIHear": "Wenn ich [PHRASE]höhre",
    "text2speech.alto": "alto",
    "text2speech.giant": "Riese",
    "text2speech.kitten": "Kätzchen",
    "text2speech.setLanguageBlock": "setze Sprache auf [LANGUAGE]",
    "text2speech.setVoiceBlock": "Ändere die Stimme zu [VOICE]",
    "text2speech.speakAndWaitBlock": "Sage [WORDS]",
    "text2speech.squeak": "Quietschen",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Übersetzung",
    "translate.defaultTextToTranslate": "Hallo",
    "translate.translateBlock": "übersetze [WORDS] nach [LANGUAGE]",
    "translate.viewerLanguage": "Sprache",
    "videoSensing.categoryName": "Video-Erfassung",
    "videoSensing.direction": "Richtung",
    "videoSensing.motion": "Bewegung",
    "videoSensing.off": "aus",
    "videoSensing.on": "an",
    "videoSensing.onFlipped": "auf gespiegelt",
    "videoSensing.setVideoTransparency": "setze Video-Transparenz auf [TRANSPARENCY]",
    "videoSensing.sprite": "Figur",
    "videoSensing.stage": "Bühne",
    "videoSensing.videoOn": "Video-[ATTRIBUTE] von [SUBJECT]",
    "videoSensing.videoToggle": "schalte Video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "Wenn Video-Bewegung > [REFERENCE]",
    "wedo2.getDistance": "Abstand",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "[TILT_DIRECTION_ANY] geneigt?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "schalte [MOTOR_ID] aus",
    "wedo2.motorOn": "schalte [MOTOR_ID] an",
    "wedo2.motorOnFor": "schalte [MOTOR_ID] für [DURATION] Sekunden an",
    "wedo2.playNoteFor": "spiele Note [NOTE] für [DURATION] Sekunden",
    "wedo2.setLightHue": "setze Lichtfarbe auf [HUE]",
    "wedo2.setMotorDirection": "setze Richtung von [MOTOR_ID] auf [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "setze Leistung von [MOTOR_ID] auf [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "wenn Abstand [OP] [REFERENCE]",
    "wedo2.whenTilted": "wenn [TILT_DIRECTION_ANY] geneigt"
}